{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Sergej\\\\Desktop\\\\Projects\\\\AccnCalProject\\\\calcompass-fe\\\\cal-compass\\\\components\\\\headersParts\\\\notificationMenu.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { ListItemIcon, ListItemText, MenuItem, Menu } from '@material-ui/core';\nimport { Done, Notifications } from '@material-ui/icons';\nimport { green, red } from '@material-ui/core/colors';\nvar useStyles = makeStyles({\n  visited: {\n    color: green[700]\n  },\n  notVisited: {\n    color: red[700]\n  }\n});\nvar StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})(function (props) {\n  return /*#__PURE__*/_jsxDEV(Menu, _objectSpread({\n    elevation: 0,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    }\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, _this);\n});\nvar StyledMenuItem = withStyles(function (theme) {\n  return {\n    root: {\n      '&:focus': {\n        backgroundColor: theme.palette.secondary.main,\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          color: theme.palette.common.white\n        }\n      }\n    }\n  };\n})(MenuItem);\nexport default function notificationMenus(_ref) {\n  _s();\n\n  var _this2 = this;\n\n  var anchorEl = _ref.anchorEl,\n      menuId = _ref.menuId,\n      handleMenuClose = _ref.handleMenuClose,\n      userData = _ref.userData,\n      setUserData = _ref.setUserData;\n  var classes = useStyles();\n\n  var visitNotification = function visitNotification(notificationId) {\n    var changedUserData = _objectSpread({}, userData);\n\n    if (changedUserData.notifications) {\n      changedUserData.notifications.forEach(function (notification) {\n        if (notification.id === notificationId) {\n          notification.visited = true;\n        }\n      });\n    }\n\n    setUserData(changedUserData);\n  }; // Menu Click Handler\n\n\n  var handleMenuClick = function handleMenuClick(id) {\n    visitNotification(id); // Change state of notification to visited\n    // Close menu\n\n    handleMenuClose();\n  }; // Assuming that the userData has an attribute notification and it is an array of objects\n\n\n  var notifications = userData.notifications; // Turn notifications into JSX components\n\n  var jsxChildrenComponents = Array.isArray(notifications) ? notifications.map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title,\n        visited = _ref2.visited;\n    return /*#__PURE__*/_jsxDEV(StyledMenuItem, {\n      onClick: function onClick(e) {\n        return handleMenuClick(id);\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: visited ? /*#__PURE__*/_jsxDEV(Done, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 38\n        }, _this2) : /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 66\n        }, _this2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, _this2), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: title,\n        className: visited ? classes.visited : classes.notVisited\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, _this2)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, _this2);\n  }) : '';\n  return /*#__PURE__*/_jsxDEV(StyledMenu, {\n    id: menuId,\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleMenuClose,\n    children: jsxChildrenComponents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(notificationMenus, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});","map":{"version":3,"sources":["C:/Users/Sergej/Desktop/Projects/AccnCalProject/calcompass-fe/cal-compass/components/headersParts/notificationMenu.js"],"names":["React","withStyles","makeStyles","ListItemIcon","ListItemText","MenuItem","Menu","Done","Notifications","green","red","useStyles","visited","color","notVisited","StyledMenu","paper","border","props","vertical","horizontal","StyledMenuItem","theme","root","backgroundColor","palette","secondary","main","common","white","notificationMenus","anchorEl","menuId","handleMenuClose","userData","setUserData","classes","visitNotification","notificationId","changedUserData","notifications","forEach","notification","id","handleMenuClick","jsxChildrenComponents","Array","isArray","map","title","e","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ListItemIcon, ListItemText, MenuItem, Menu} from '@material-ui/core';\r\nimport { Done, Notifications } from '@material-ui/icons';\r\nimport { green, red } from '@material-ui/core/colors'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    visited:{\r\n        color: green[700]\r\n    },\r\n    notVisited:{\r\n        color: red[700]\r\n    }\r\n})\r\n\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  }\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function notificationMenus({anchorEl, menuId, handleMenuClose, userData, setUserData}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const visitNotification = notificationId =>{\r\n        const changedUserData = {...userData}\r\n\r\n        if(changedUserData.notifications){\r\n            changedUserData.notifications.forEach(notification=>{\r\n                if(notification.id === notificationId){\r\n                    notification.visited = true\r\n                }\r\n            })\r\n        }\r\n        setUserData(changedUserData)\r\n        \r\n    }\r\n\r\n    // Menu Click Handler\r\n    const handleMenuClick = id =>{\r\n      visitNotification(id) // Change state of notification to visited\r\n      // Close menu\r\n      handleMenuClose()\r\n    }\r\n\r\n    // Assuming that the userData has an attribute notification and it is an array of objects\r\n    const { notifications } = userData\r\n\r\n    // Turn notifications into JSX components\r\n    const jsxChildrenComponents = Array\r\n        .isArray(notifications) ? \r\n            notifications\r\n                .map(({ id, title, visited })=>(\r\n                    <StyledMenuItem key={id} onClick={e=>handleMenuClick(id)}>\r\n                        <ListItemIcon>\r\n                            {visited?<Done fontSize=\"small\" /> : <Notifications />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={title} className={visited?classes.visited:classes.notVisited}/>\r\n                    </StyledMenuItem>)):\r\n            ''\r\n\r\n  return (\r\n    <StyledMenu\r\n    id={menuId}\r\n    anchorEl={anchorEl}\r\n    keepMounted\r\n    open={Boolean(anchorEl)}\r\n    onClose={handleMenuClose}\r\n    >\r\n        {jsxChildrenComponents}\r\n    </StyledMenu>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}